package sloth;
use strict;
use utf8;
use Dancer2;
use Dancer2::Plugin::DBIC;      # accès aux classes DBI (mot-clé: schema)
use Data::FormValidator;       # pour valider les formulaires
use Data::Dumper;
use CGI::Carp qw/fatalsToBrowser/;
use Messages;
use constant DEBUG => 1;

# chargement du module gérant les routes commençant par '/utilisateur'
use sloth::Utilisateur;


# les routes de ce fichier n'ont pas de préfixe
prefix undef;

our $VERSION = '0.1';

# our $schema = schema "model_sloth"; # chargement classes DBIx::Class du schéma model_sloth

get '/' => sub {
  return redirect '/utilisateur/liste';
};

get '/about' => sub {
  return vue_about();
};

# --- route par défaut: déclenchée si URL non reconnue
any qr{.*} => sub {
  return vue_route_non_trouvee();
};

# -----------------------------------------------------------------------------
# --- appelé juste avant la génération du HTML par le template
#   transmission de données complémentaires (messages, menus, ...) au template
hook before_template => sub {
  my $tokens = shift;

  # uri_base représente l'URI de l'application (on supprime un éventuel '/' final)
  $tokens->{uri_base} = request->uri_base;
  $tokens->{uri_base} = $1 if $tokens->{uri_base} =~ m{^(.*)/$};

  # pour connaître la route courante
  $tokens->{path_info} = request->path_info;

  # pour connaître le user connecté
  my $remote_user = request->user;
  $tokens->{remote_user} = $remote_user;

  # --- éléments du menu, pourraient dépendre du contexte... ici on laisse fixe
  $tokens->{menu} = [
    {texte => 'Liste utilisateurs',  route => '/utilisateur/liste' },
    #{texte => '(ajax)',  route => '/client/liste_ajax' },
    #{texte => 'Commandes',route => '/commande/liste' },
    #{texte => 'Produits',route => '/produit/liste' },
    #{texte => 'Rechercher',     route => '/client/rechercher' },
    #{texte => 'Nouveau client', route => '/client/creer' },
    #{texte => 'À propos..',     route => '/about' },
      ];
};

#------------------------------------------------------------
# Les vues générales
#------------------------------------------------------------

sub vue_route_non_trouvee {
  status 404;
  template 'erreur', { path => request->path };
}

sub vue_about {
  template 'about', {
    titre => "À propos de sloth",
   };
}

# fin du package (la compilation s'est bien passé)
true;

__END__
